Starting with the 386 processor, x86 CPUs have 32-bit registers named EAX, EBX, ECX,
and EDX. The second half (the least significant bits) of these registers is the same as AX,
BX, CX and DX, respectively. Modify the regs union so that it includes these registers as
well as the older ones. Your union should be set up so that modifying EAX changes AX as and
modifying AX changes the second half of EAX. (The other new registers will work in a sim-
ilar fashion.) You'll need to add some "dummy" members to the word and byte structures,
corresponding to the other half of EAX, EBX, ECX, and EDX. Declare the type of the new
registers to be DWORD (double word), which should be defined as unsigned long. Don't
forget that x86 architecture is little-endian.

typedef unsigned char BYTE; // 8-bits on my PC
typedef unsigned short WORD; // 16-bits on my PC
typedef unsigned int DWORD; // 32-bits on my PC

union {
    struct {
        DWORD eax;
        DWORD ebx;
        DWORD ecx;
        DWORD edx;
    } dword;
    struct {
        WORD axl, axh;
        WORD bxl, bxh;
        WORD cxl, cxh;
        WORD dxl, dxh;
    } word;
    struct {
        BYTE axll, axlh, axhl, axhh;
        BYTE bxll, bxlh, bxhl, bxhh;
        BYTE cxll, cxlh, cxhl, cxhh;
        BYTE dxll, dxlh, dxhl, dxhh;
    } byte;
} regs;