Suppose that u is the following union:

union {
    double a;
    struct {
        char b[4];
        double c;
        int d;
    } e;
    char f[4];
} u;

If char values occupy one byte, int values occupy four bytes, and double values occupy
eight bytes, how much space will a C compiler allocate for u? (Assume that the compiler
leaves no "holes" between members.)

8 bytes for a, 8 bytes for e, and 4 bytes for f, 20 bytes total.